#!/bin/bash

# List of all supported formats
all_formats=(stl off amf 3mf csg dxf svg pdf png echo ast term nef3 nefdbg)

# Usage function
usage() {
    echo "Usage: $0 [--formats 'format1 format2 ...'] <file.scad>"
    echo "Options:"
    echo "  --formats 'format1 format2 ...'  Specify space-delimited export formats to use."
    echo "  -h, --help                       Display this help message."
    exit 1
}

# Parse command-line options
formats=("${all_formats[@]}")  # Default to all formats
while [[ "$#" -gt 0 ]]; do
    case "$1" in
        --formats)
            IFS=' ' read -r -a formats <<< "$2"
            shift 2
            ;;
        -h|--help)
            usage
            ;;
        *)
            input_file="$1"
            shift
            ;;
    esac
done

# Check if an input file was specified
if [ -z "${input_file}" ]; then
    usage
fi

# Check if the file exists
if [ ! -f "${input_file}" ]; then
    echo "Error: File does not exist."
    exit 1
fi

# Validate specified formats
for format in "${formats[@]}"; do
    if [[ ! " ${all_formats[*]} " =~ " ${format} " ]]; then
        echo "Error: Unsupported format '${format}'."
        exit 1
    fi
done

# Extract directory from the input file path
dir=$(dirname "${input_file}")

# Create output directory
out_dir="${dir}/out"
mkdir -p "${out_dir}"
if [ $? -ne 0 ]; then
    echo "Failed to create output directory."
    exit 1
fi

# Script's own directory
script_dir=$(dirname "$0")

# Convert to each specified format
for format in "${formats[@]}"; do
    output_file="${out_dir}/$(basename "${input_file}" .scad).${format}"
    echo "Exporting to ${format}..."
    if ! openscad -o "${output_file}" -D "output_format=\"${format}\"" "${input_file}"; then
        echo "Failed to export ${format}"
    else
        echo "${format} export completed successfully."
        # If the format is CSG, attempt to convert to STEP
        if [[ "${format}" == "csg" ]]; then
            step_output_file="${out_dir}/$(basename "${input_file}" .scad).step"
            echo "Attempting to convert CSG to STEP..."
            if [ "${DYNAMIC_FREECAD}" = true ]; then
                conversion_script="${script_dir}/freecad-convert-shape-dynamic"
            else
                conversion_script="${script_dir}/freecad-convert-shape-cli"
            fi
            if ! ${conversion_script} "${output_file}" "${step_output_file}"; then
                echo "Failed to convert CSG to STEP"
            else
                echo "CSG to STEP conversion successful."
            fi
        fi
    fi
done

echo "All done. Check your '${out_dir}' directory for the outputs."

